// This file was generated by a tool; you should avoid making direct changes.
// Consider using 'partial classes' to extend these types
// Input: keys.proto

#pragma warning disable CS0612, CS1591, CS3021, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
namespace tendermint.crypto
{

    [global::ProtoBuf.ProtoContract()]
    public partial class PublicKey : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"ed25519")]
        public byte[] Ed25519
        {
            get { return __pbn__sum.Is(1) ? ((byte[])__pbn__sum.Object) : default; }
            set { __pbn__sum = new global::ProtoBuf.DiscriminatedUnionObject(1, value); }
        }
        public bool ShouldSerializeEd25519() => __pbn__sum.Is(1);
        public void ResetEd25519() => global::ProtoBuf.DiscriminatedUnionObject.Reset(ref __pbn__sum, 1);

        private global::ProtoBuf.DiscriminatedUnionObject __pbn__sum;

        [global::ProtoBuf.ProtoMember(2, Name = @"secp256k1")]
        public byte[] Secp256k1
        {
            get { return __pbn__sum.Is(2) ? ((byte[])__pbn__sum.Object) : default; }
            set { __pbn__sum = new global::ProtoBuf.DiscriminatedUnionObject(2, value); }
        }
        public bool ShouldSerializeSecp256k1() => __pbn__sum.Is(2);
        public void ResetSecp256k1() => global::ProtoBuf.DiscriminatedUnionObject.Reset(ref __pbn__sum, 2);

    }

}

#pragma warning restore CS0612, CS1591, CS3021, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
